filtered_data <- arrange(filtered_data,decs(GDP_2012))
filtered_data <- arrange(filtered_data,desc(GDP_2012))
filtered_data[13,X.2]
filtered_data[13,filtered_data$X.2]
filtered_data$X.2[13]
filtered_data <- arrange(filtered_data,desc(as.numeric(GDP_2012))
)
filtered_data$X.2[13]
clean_data <- mergedData %>% filter(X!="") %>% filter(Gross.domestic.product.2012!="") %>% mutate(rank = as.numeric(Gross.domestic.product.2012))
View(clean_data)
clean_data <- arrange(clean_data,desc(rank))
clean_data$X.2[13]
clean_gdp <- gdp %>% filter(X!="") %>% filter(Gross.domestic.product.2012!="") %>% mutate(rank = as.numeric(Gross.domestic.product.2012))
clean_data <- arrange(clean_data,desc(rank))
clean_data$X.2[13]
View(gdp)
View(clean_gdp)
clean_data <- arrange(clean_gdp,desc(rank))
clean_data$X.2[13]
clean_data$X.2[13,]
clean_data$X.2[,13]
clean_data$X.2[13]
ls()
gdp_clean <- gdp %>% filter(X!="") %>% filter(Gross.domestic.product.2012!="") %>% mutate(rank=as.numeric(Gross.domestic.product.2012)) %>% arrange(desc(rank)) %>% print
match <-gdp_clean$X %in% edstats$CountryCode
match
sum(match)
gdp_clean$X.2[13]
View(gdp_clean)
url31  <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url32 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
library(dplyr)
download.file(url31,destfile="data_GDP.csv",method="curl")
download.file(url32,destfile="data_EDSTATS_Country.csv",method="curl")
gdp <- read.csv("data_GDP.csv")
edu <- read.csv("data_EDSTATS_Country.csv")
gdp <- read.csv("data_GDP.csv", colClasses = "character")
gdp_clean  <- gdp %>% filter(X!="") %>% filter(Gross.domestic.product.2012!="")  %>% mutate(rank = as.numeric(Gross.domestic.product.2012))  %>% arrange(desc(rank)) %>% print
m  <- gdp_clean$X %in% edu$CountryCode
sum(m)
gdp_clean$X.2[13]
m4  <- merge(gdp_clean, edu, by.x = "X", by.y="CountryCode")
View(m4)
income <- select(m4,rank,Income.Group)
income <- group_by(income,Income.Group)
income
income <-summarize(mean(rank))
income <-summarise(mean(rank))
income <-summarise(income,mean(rank))
income
quantile(m4$rank, c(0,1,2,3,4))
quantile(m4$rank, c(0,1,2,3,4)/5)
quantile(m4$rank, c(0,1,2,3,4,5)/5)
?cut
quant<-cut(m4$rank,breaks=quantile(m4$rank, c(0,1,2,3,4,5)/5))
quant
View(quant)
quant <- group_by(quant,cut(rank,quantile(m4$rank, c(0,1,2,3,4,5)/5)))
quant <- group_by(quant,cut(rank,quantile(rank, c(0,1,2,3,4,5)/5)))
quant <- mutate(quant,rank2= cut(rank, c(0,1,2,3,4,5)/5)))
quant <- mutate(quant,rank2= cut(rank, c(0,1,2,3,4,5)/5))
quant <- mutate(quant,rank2= cut(rank,quantile(rank, c(0,1,2,3,4,5)/5)))
q  <-  quantile(m4$rank, c(0,1,2,3,4,5)/5)
m4 <- mutate(m4,rank2= cut(rank,quantile(rank, c(0,1,2,3,4,5)/5)))
m4<-group_by(m4,rank2)
m4
View(m4)
table(m4$rank2,m4$Income.Group)
table(m4$rank2,m4$Income.Group)
swirl()
library(swirl)
swirl()
mydf <- read.csv(path2csv,stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran, package=="swirl")
filter(cran, r_version=="3.1.1", country=="US")
?Comparison
filter(cran, r_version<="3.0.2", country=="IN")
filter(cran, country=="US" | country == "IN")
filter(cran,size>100500 & r_os=="linux_gnu")
filter(cran,size>100500, r_os=="linux_gnu")
filter(cran,size > 100500, r_os == "linux_gnu")
library(swirl)
swirl
swirl()
filter(cran, size>100500,r_os=="linux_gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version)
)
cran2 <- select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id)
)
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3 <- select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_mb=size/2^20, size_gb=size_mb/2^10)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran,package)
by_package
summarize(by_package,mean(zise))
summarize(by_package,mean(size))
submit()
tbl
pack_sum
quantile(pack_sum$count, probs=0.99)
top_counts <- filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts,desc(count)
)
View(top_counts_sorted)
quantile(pack_sum$unique,probs=0.99)
top_unique <- filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted <- arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res <- gather(students2,sex_class,count,-grade)
res
?separate
separate(res,col=sex_class, into=c("sex","class"))
submit()
students3
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
?spread()
?spread
submit()
submit()
submit()
library(readr)
parse_number("class5")
library(readr)
submit()
submit()
students4
submit()
submit()
submit()
submit()
submit()
passed
failed
passed <- mutate(passed,"passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
?bind_rows
bind_rows(passed,failed)
sat
submit()
submit()
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_date)
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy("25081985")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
this_moment <- update(this_moment, hours=15, minutes=35)
this_moment
nyc <- now(tz="America/NewYork")
nyc <- now("America/NewYork")
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours=17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone="Asia/HongKong")
arrive <- with_tz(arrive,"Asia/HongKong")
arrive <- with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?interval
how_long <- interval(last_time,arrive)
as.period(how_long)
stopwatch()
url1 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url1,destfile="housing.csv", method="curl")
housing_data <- read.csv("housing.csv")
head(housing_data)
?strsplit
names(housing_data)
splitNames = strsplit(names(housing_data),"")
names(splitNames)
splitNames
splitNames = strsplit(names(housing_data),"wgtp")
splitNames
splitNames[123]
ls()
gdp
head(gdp)
head(clean_gdp)
sub_dgp <- gsub(",","",clean_gdp(X.3))
?gsub
sub_dgp <- gsub(",","",clean_gdp$X.3)
head(sub_gdp)
sub_dgp <- gsub(",","",clean_gdp$X.3,)
head(sub_gdp)
head(sub_dgp)
sub_gdp <- gsub(",","",clean_gdp(X.3),)
sub_gdp <- gsub(",","",clean_gdp$X.3)
head(sub_gdp)
sub_gdp <- gsub(",","",clean_gdp$X.3,)
head(sub_gdp)
class(sub_gdp)
sub_gdp <- gsub(",","",as.numeric(clean_gdp$X.3),)
class(sub_gdp)
mean(as.numeric(sub_gdp))
head(clean_gdp)
clean_gdp
sub_gdp
head(clean_gdp)
clean_gdp$X.3[[1]]
sub_gdp <- gsub(",","",clean_gdp$X.3)
sub_gdp
mean(as.numeric(sub_gdp))
head(clean_gdp)
grep("^United",clean_gdp$X.2)
grep("^United",clean_gdp$X.2),3
grep("*United",clean_gdp$X.2)
grep("United$",clean_gdp$X.2)
ls()
head(m4)
names(m4)
grep("Fiscal year end", m4$Special.Notes)
grep("Fiscal year end", m4$Special.Notes, value=TRUE)
count(grep("Fiscal year end: June", m4$Special.Notes))
grep("Fiscal year end: June", m4$Special.Notes)
fy_june <- grep("Fiscal year end: June", m4$Special.Notes)
str(fy_june)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN", auto.assign=FALSE)
sampleTimes = index(amzn)
head sampleTimes
head(sampleTimes)
mean(as.numeric(sub_gdp))
str(fy_june)
head(sampleTimes)
twelve <- grep("^2012",sampleTimes)
str(twelve)
length(twelve)
mon <- grep("Monday",weekdays(twelve))
mon <- grep("Monday",weekdays(as.Date(twelve))
)
head(mon)
str(mon)
length(mon)
weekdays(as.Date(twelve))
weekdays(as.Date(sampleTimes[twelve]))
mon <- grep("Monday",weekdays(as.Date(sampleTimes[twelve])))
str(mon)
getwd()
setwd("/Users/jhoffman/datasciencecoursera/get_clean_data")
getwd
getwd()
projUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(projUrl,destfile="dataset.zip", method="curl")
ls()
dir()
source('~/datasciencecoursera/get_clean_data/project/run_analysis.R')
dir()
source('~/datasciencecoursera/get_clean_data/project/run_analysis.R')
dir()
getwd()
source('~/datasciencecoursera/get_clean_data/project/run_analysis.R')
ls()
head(features)
head(activity_labels)
source('~/datasciencecoursera/get_clean_data/project/run_analysis.R')
ls()
str(trainX)
head(trainX)
source('~/datasciencecoursera/get_clean_data/project/run_analysis.R')
source('~/datasciencecoursera/get_clean_data/project/run_analysis.R')
str(trainX)
head(trainX)
source('~/datasciencecoursera/get_clean_data/project/run_analysis.R')
ls()
head(trainX)
head(features)
length(features)
dim(features)
dim(trainX)
dim(trainY)
dim(testY)
dim(testX)
dim(test_subject)
dim(train_subject)
heat(train_subject)
head(train_subject)
head(activity_labels)
test <- tolower(activity_labels[,2])
head(test)
test <- tolower(activity_labels)
head(test)
rm(test)
head(train_subject)
head(testX)
head(testY)
head(features)
features
length(testX)
head(testY)
length(testY)
dim(testY)
head)activity_labels)
head(activity_labels)
activity_labels
dim(testY)
head(testY)
dim(testX)
head(testX)
dim(testX)
dim(testY)
head(test_subject)
dim(test_subject)
head(features)
head(trainX)
dim(trainX)
source('~/datasciencecoursera/get_clean_data/project/run_analysis.R')
head(train_data)
head(train_data,1)
head(test_data,1)
names(train_data)
source('~/datasciencecoursera/get_clean_data/project/run_analysis.R')
copy<-data
head(copy)
ncols(copy)
ncol(copy)
selected <- select(copy,for(val in sequence))
selectme <- function {}
selectme <- function {
selectme <- function { for(name in names(copy)) { grep(name,[Mm]ean | [Ss]td)}}
selectme <- function { for(name in names(copy)) { grep(name,([Mm]ean | [Ss]td))}}
selectme <- function() {for(name in names(copy)) { grep(name,([Mm]ean | [Ss]td))}}
selectme <- function() {for(name in names(copy)) { grep(name,[Mm]ean | [Ss]td)}}
selectme <- function() {for(name in names(copy)) { grep([Mm]ean | [Ss]td,name)}}
selectme <- function() {for(name in names(copy)) { grep(([Mm]ean | [Ss]td),name)}}
selectme <- function() {for(name in names(copy)) { grep(([Mm]ean | [Ss]td),name)}}
test <- grep(([Mm]ean | [Ss]td),names(copy))
test <- grep((mean | std),names(copy))
names(copy)
test <- grep(("mean | std"),names(copy))
test
names <- names(copy)
test <- names[grep(".mean.|.std."),names]
test <- names[grep(".mean.|.std."),names,]
test <- names[grep(".mean.|.std.",names)]
test
test <- copy[grep(".mean.|.std.",names(copy))]
head(test)
names(copy)
test <- copy[grep("activitylabel|subjectid|.mean.|.std.",names(copy))]
names(test)
source('~/datasciencecoursera/get_clean_data/project/run_analysis.R')
source('~/datasciencecoursera/get_clean_data/project/run_analysis.R')
head(data)
test <- group_by(data,activitylabel)
head(test)
ar_test <- arrange(test,activitylabel,subjectid)
head(ar_test)
head(ar_test,20)
rm(ar_test)
ar_test <- arrange(test,activitylabel)
head(ar_test,20)
ar_test <- arrange(test,activitylabel,subjectid)
activity_labels
colnames(activity_labels) <- c("activitylabel","activity")
activity_labels
test <-merge(data,activity_labels,by="activitylabel")
tail(test)
test <-merge(activity_labels,data,by="activitylabel")
tail(test)
test <-merge(activity_labels,data,by="activitylabel")
tail(test)
test <-select(test,-activitylabel)
head(test)
ar_test <- arrange(test,activitylabel,subjectid)
source('~/datasciencecoursera/get_clean_data/project/run_analysis.R')
head(data)
test <- gsub("\\(),"",names(data))
)
))))
]
;
CCC
q
test <- gsub("\\()","",names(data))
head(test)
test <- gsub("\(\)","",names(data))
test <- gsub("()","",names(data))
head(test)
head(data)
copy<-data
test <- gsub("()","",names(copy))
head(test)
source('~/datasciencecoursera/get_clean_data/project/run_analysis.R')
source('~/datasciencecoursera/get_clean_data/project/run_analysis.R')
head(data)
?group_by
test <- group_by(data,activity,subjectid)
head(test)
str(test)
swirl()
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran)
by_package<-group_by(cran,package)
by_package
summarize(by_package,mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- arrange(pack_sum, unique>465)
top_unique <- filter(pack_sum, unique>465)
View(top_unique)
top_unique_sorted <- arrange(top_unique,desc(unique))
View(top_unique_sorted)
0
q
quit()
source('~/datasciencecoursera/get_clean_data/project/run_analysis.R')
head(data)
source('~/datasciencecoursera/get_clean_data/project/run_analysis.R')
library(plyr)
install.packages(plyr)
install.packages("plyr")
library(plyr)
?ddply
ncol(data)
